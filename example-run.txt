A* - Delete Relaxation - H_Max
        ======PLAN (Nodes)=======
['Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), at(Boston), connected(Toronto, NewYork), total-cost = 3 | g = 3.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), at(NewYork), visited(NewYork), total-cost = 6 | g = 6.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), at(Albany), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 9 | g = 9.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), at(Toronto), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), visited(Toronto), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 12 | g = 12.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), visited(Pittsburgh), connected(Boston, Pittsburgh), at(Pittsburgh), visited(Toronto), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 15 | g = 15.00 | h = 15.00 | open = True | closed = False }']
        ======PLAN (Actions)=======
('move(Pittsburgh, Boston)>', 'total-cost = 3')
('move(Boston, NewYork)>', 'total-cost = 6')
('move(NewYork, Albany)>', 'total-cost = 9')
('move(Albany, Toronto)>', 'total-cost = 12')
('move(Toronto, Pittsburgh)>', 'total-cost = 15')

        ======METRICS=======
Expanded 17 state(s).
Opened 27 state(s).
Reopened 0 state(s).
Evaluated 21 state(s).
Generated 28 state(s).
Dead ends: 3 state(s).
Runtime: 1.46s.
Total heuristic runtime: 2.37s
Computational weight of heuristic in the search: 162.00%

        A* - Delete Relaxation - H_Add
        ======PLAN (Nodes)=======
['Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), at(Boston), connected(Toronto, NewYork), total-cost = 3 | g = 3.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), at(NewYork), visited(NewYork), total-cost = 6 | g = 6.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), at(Albany), connected(NewYork, Boston), connected(Boston, Pittsburgh), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 9 | g = 9.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), at(Toronto), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), connected(Boston, Pittsburgh), visited(Toronto), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 12 | g = 12.00 | h = inf | open = False | closed = True }', 'Node { object(NewYork), object(Pittsburgh), object(Toronto), object(Boston), object(Albany), connected(Pittsburgh, Boston), connected(Toronto, Albany), visited(Boston), connected(NewYork, Albany), connected(NewYork, Toronto), connected(Toronto, Pittsburgh), connected(NewYork, Boston), visited(Pittsburgh), connected(Boston, Pittsburgh), at(Pittsburgh), visited(Toronto), connected(Albany, NewYork), visited(Albany), connected(NewYork, Pittsburgh), connected(Albany, Toronto), connected(Boston, NewYork), connected(Pittsburgh, NewYork), connected(Toronto, NewYork), visited(NewYork), total-cost = 15 | g = 15.00 | h = 15.00 | open = True | closed = False }']
        ======PLAN (Actions)=======
('move(Pittsburgh, Boston)>', 'total-cost = 3')
('move(Boston, NewYork)>', 'total-cost = 6')
('move(NewYork, Albany)>', 'total-cost = 9')
('move(Albany, Toronto)>', 'total-cost = 12')
('move(Toronto, Pittsburgh)>', 'total-cost = 15')

        ======METRICS=======
Expanded 17 state(s).
Opened 27 state(s).
Reopened 0 state(s).
Evaluated 21 state(s).
Generated 28 state(s).
Dead ends: 3 state(s).
Runtime: 1.31s.
Total heuristic runtime: 1.22s
Computational weight of heuristic in the search: 93.45%

